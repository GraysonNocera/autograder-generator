Metadata-Version: 2.1
Name: gradergen
Version: 0.0.1
Summary: ECE 264 utility for generating autograders
Author-email: Grayson Nocera <gnocera@purdue.edu>
License: MIT License
        
        Copyright (c) 2024 Grayson Nocera
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/GraysonNocera/gradergen
Project-URL: Issues, https://github.com/GraysonNocera/gradergen/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: gradescope-utils>=0.3.1
Requires-Dist: parameterized
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"

# gradergen

ECE 264 utility for generating autograder files. 

# Installation

```bash
pip install gradergen
```

# Overview

Given a toml file like this:

```toml
files_from_student = [ "test.c", "test.h", "main.c" ] 
executable = "hwx" 

[tests] 

[tests.test_memory]
command_arguments = [ "inputs/input1.txt" ] 

[tests.test_program] 

[tests.test_program.input1] 
command_arguments = [ "inputs/input1.txt", 20 ] 
expected_output = "x yy 10" 

[tests.test_program.input2]
command_arguments = [ "inputs/input2.txt" ]
expected_output = "expected/expected1.txt"

[tests.test_program.input3]
command_arguments = [ 10, 20 ]
expected_output = "x yy 10"
```

the library will generate a zip file with the following structure:

```
requirements.txt
run_autograder
run_tests.py
setup.sh
<files_from_solution>
tests/
    config.py
    test_compile.py
    test_files.py
    test_memory.py
    test_program.py
    weights.py
    <toml_file>
```

# Usage

```bash
gradergen <path-to-toml-config>
```

Examples for the toml config can be found in the `examples` directory.
